AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  MSKKafkaVersion:
    Description: "MSK version"
    Type: String
    Default: 3.5.1
    AllowedValues:
      - 3.5.1
Resources:
  MSKSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: MSK Security Group
      VpcId: vpc-0d5179bc9a54c71d8
      SecurityGroupIngress:
      - Description: allows 2181 (MSK Zookeeper) access from security group associated with Kafka clients EC2 instances
        IpProtocol: tcp
        FromPort: 2181
        ToPort: 2181
        CidrIp: 0.0.0.0/0
      - Description: allows 9092 (Plaintext) access from security group associated with Kafka clients EC2 instances
        IpProtocol: tcp
        FromPort: 9092
        ToPort: 9092
        CidrIp: 0.0.0.0/0
      - Description: allows 9092 (Plaintext) access from VPC CIDR range for NLB nodes to perform health check of Broker
        IpProtocol: tcp
        FromPort: 9092
        ToPort: 9092
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - Description: all egress allowed
        IpProtocol: -1
        CidrIp: 0.0.0.0/0
  MSKClusterConfig:
    Type: AWS::MSK::Configuration
    Properties:
      Name: !Sub "${AWS::StackName}-msk-cluster-config"
      ServerProperties: |
        auto.create.topics.enable=false
        default.replication.factor=3
        min.insync.replicas=2
        num.io.threads=8
        num.network.threads=5
        num.partitions=1
        num.replica.fetchers=2
        replica.lag.time.max.ms=30000
        socket.receive.buffer.bytes=102400
        socket.request.max.bytes=104857600
        socket.send.buffer.bytes=102400
        unclean.leader.election.enable=true
        zookeeper.session.timeout.ms=18000
  MSKCluster:
    Type: AWS::MSK::Cluster
    Properties:
      BrokerNodeGroupInfo:
        ClientSubnets:
          - subnet-0000c23370e654546
          - subnet-00a5d9e844d0ebdc1
        InstanceType: m7g.large
        SecurityGroups: [!GetAtt MSKSecurityGroup.GroupId]
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: 100
      ClusterName: !Ref 'AWS::StackName'
      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: PLAINTEXT
          InCluster: false
      ConfigurationInfo:
        Arn: !Ref MSKClusterConfig
        Revision: 1
      ClientAuthentication:
        Unauthenticated:
          Enabled: true
      EnhancedMonitoring: PER_TOPIC_PER_BROKER
      KafkaVersion: !Ref MSKKafkaVersion
      NumberOfBrokerNodes: 2
      Tags:
        Key: "OpensearchLoad"
        Value: "True"
Outputs:
  MSKClusterArn:
    Description: MSK Cluster Arn
    Value: !Ref MSKCluster
    Export:
      Name: !Sub "${AWS::StackName}-ClusterArn"